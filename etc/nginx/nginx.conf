worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  1024;
}

http {
    log_format  main '$remote_addr [$time_local] $host $scheme $request" '
                     '$status $http_range $body_bytes_sent $request_time '
                     '"$http_user_agent"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    server_tokens off;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    lua_package_path "/usr/share/lua/5.1/?.lua;;";

    root /var/www/html;

    server {
        listen       80 default_server;
        server_name  _;

        location /kafka/producer {
            set $type "$arg_type";
            set $data "$arg_data";
            content_by_lua_block {
                local cjson = require "cjson"
                local producer = require "nginx.kafka.producer"

                local broker_list = {
                    { host = "192.168.0.11", port = 9092, },
                    { host = "192.168.0.12", port = 9092, },
                    { host = "192.168.0.13", port = 9092, },
                }

                local topic = "test"
                local p = producer:new(broker_list)
                local offset, err = p:send(topic, ngx.var.type, ngx.var.data)
                if not offset then
                    ngx.exit(502)
                end
                ngx.exit(200)
            }
        }
    }
}
